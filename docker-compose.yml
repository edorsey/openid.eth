version: "3.7"

services:
  # caddy:
  #   image: caddy:alpine
  #   restart: unless-stopped
  #   ports:
  #     - 81:80
  #     - 444:443
  #   volumes:
  #     - $PWD/config/caddy/Caddyfile:/etc/caddy/Caddyfile
  #     - $PWD/data/caddy:/data/caddy
  #     - $PWD/config/caddy:/config/caddy

  # consent:
  #   command: ""
  #   entryypoint: ""
  #   environment:
  #     - HYDRA_ADMIN_URL=http://edo-cloud-5.dorsey.io:4445/
  #   image: oryd/hydra-login-consent-node:v1.10.2

  api:
    build: ./api
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445

  hydra:
    image: oryd/hydra:latest
    # build:
    #  context: ../hydra
    #  dockerfile: .docker/Dockerfile-build
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve --config /etc/config/hydra/hydra.yml all --dangerous-force-http
    volumes:
      - ./config/hydra:/etc/config/hydra
    environment:
      - OIDC_SUBJECT_IDENTIFIERS_SUPPORTED_TYPES=public
      - DSN=postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: unless-stopped
    extra_hosts:
      - "hydra.openid.local:192.168.20.223"
    depends_on:
      postgres:
        condition: service_healthy
      hydra-migrate:
        condition: service_started

  hydra-migrate:
    image: oryd/hydra:latest
    environment:
      - DSN=postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate --config /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./config/hydra:/etc/config/hydra
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:9.6
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
