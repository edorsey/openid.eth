extends layout

block content
    h1(id="login-title") Please log in
    if error
        p.
            #{error}
    form(action=action, method="POST")
        input(type="hidden", name="_csrf", value=csrfToken)
        input(type="hidden", name="challenge", value=challenge, id="challenge")
        div
            label(for="address") Address
            input(id="address", name="address", type="text")
        div
            label(for="ens") ENS
            input(id="ens", name="ens", type="text")
        div
            label(for="email") Email
            input(id="email", name="email", type="email")
        div
            label(for="twitter") Twitter
            input(id="twitter", name="twitter", type="text")
        div
            label(for="url") URL
            input(id="url", name="url", type="text")
        div 
            label(for="signature") Signature
            input(id="signature", name="signature", type="text")

        input(type="submit", id="accept", name="submit", value="Log in")
        input(type="submit", id="reject", name="submit", value="Deny access")
    
    button(id="enable", type="button") Enable Ethereum

    script(src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js", type="application/javascript").
    script(type="module").
        let accounts
        if (typeof window.ethereum !== 'undefined') {
            const provider = new ethers.providers.Web3Provider(window.ethereum);

            const ethereumButton = document.querySelector('#enable');

            const challengeInput = document.querySelector('#challenge')
            const addressInput = document.querySelector('#address')
            const ensInput = document.querySelector('#ens')
            const emailInput = document.querySelector('#email')
            const twitterInput = document.querySelector('#twitter')
            const urlInput = document.querySelector('#url')
            const signatureInput = document.querySelector('#signature')

            ethereumButton.addEventListener('click', async (e) => {
                e.preventDefault();
                accounts = await ethereum.request({ method: 'eth_requestAccounts' });
                console.log({accounts})
                const ens = await provider.lookupAddress(accounts[0]);
                console.log({account: accounts[0], ens})

                addressInput.value = accounts[0]
                ensInput.value = ens

                if (ens) {
                    const resolver = await provider.getResolver(ens)
                    const email = await resolver.getText("email");
                    const url = await resolver.getText("url");
                    const twitter = await resolver.getText("com.twitter");
                    
                    console.log({email, url, twitter})

                    emailInput.value = email
                    urlInput.value = url
                    twitterInput.value = twitter
                }

                const signer = provider.getSigner();
                const signature = await signer.signMessage(challengeInput.value);

                console.log("SIG?", {signature});

                signatureInput.value = signature;
            });
        }
        
